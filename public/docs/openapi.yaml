openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/product-sales:
    get:
      summary: 'Danh sách sản phẩm giảm giá'
      operationId: danhSchSnPhmGimGi
      description: 'API này sẽ trả về thông tin hiển thị sản phẩm giảm giá'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - 'Big Sale'
      security: []
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ea
      -
        in: path
        name: category_id
        description: 'Optional parameter. id danh mục sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: et
      -
        in: path
        name: pdone_id
        description: 'Optional parameter. id user truyền khi quyền user là vshop'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: enim
      -
        in: path
        name: order_by
        description: 'Optional parameter. | 1 Sắp xếp mới nhất | 2 Sắp xếp theo giá | 3 Số sản phẩm đã bán'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: debitis
      -
        in: path
        name: option
        description: 'Optional parameter. 1 asc | 2 desc Thứ tự sấp xếp'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: mollitia
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang Mặc định 10'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: aut
      -
        in: path
        name: payment
        description: 'Optional parameter. Phương thức thanh toán 1 COD | 2 Chuyển khoản'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: consequatur
  /api/bill/add:
    post:
      summary: 'Bill create'
      operationId: billCreate
      description: 'API dùng để tạo hóa đơn'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Bill
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pdone_id:
                  type: mã
                  description: 'user của người dùng mua hàng'
                  example: facere
                name:
                  type: tên
                  description: 'người dùng'
                  example: vel
                phone_number:
                  type: số
                  description: 'điện thoại'
                  example: consequatur
                address:
                  type: địa
                  description: chỉ
                  example: magni
                province:
                  type: number
                  description: 'Must be at least 1.'
                  example: 62
                data:
                  type: dữ
                  description: 'liệu sản phẩm id:id sản phẩm, vshop_id: mã vshop,quantity:số lượng sản phẩm [{"id":"19","vshop_id":"MVS123123","quantity":12},{"id":"20","vshop_id":"MVS123123","quantity":12}]'
                  example: inventore
                district:
                  type: number
                  description: 'Must be at least 1.'
                  example: 85
                id_vshop:
                  type: mã
                  description: 'user của vshop'
                  example: ut
              required:
                - province
                - district
      security: []
  '/api/bill/detail/{id}':
    get:
      summary: 'chi tiết hóa đơn'
      operationId: chiTitHan
      description: 'API này sẽ trả về chi tiết 1 hóa đơn'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status_code: 200
                  message: 'successfully retrieved information'
                  data: null
                properties:
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'successfully retrieved information'
                  data:
                    type: string
                    example: null
      tags:
        - Bill
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the detail.'
        example: molestiae
        required: true
        schema:
          type: string
  /api/bill/checkout:
    post:
      summary: ''
      operationId: postApiBillCheckout
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Bill
      security: []
  '/api/bill/{id}':
    get:
      summary: Bill
      operationId: bill
      description: 'API dùng để lấy danh sách hóa đơn của 1 người dùng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'user_id' in 'where clause' (SQL: select * from `bills` where `user_id` = 18)"
                  exception: Illuminate\Database\QueryException
                  file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line: 760
                  trace:
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 720
                      function: runQueryCallback
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                      line: 422
                      function: run
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2706
                      function: select
                      class: Illuminate\Database\Connection
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2694
                      function: runSelect
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 3230
                      function: 'Illuminate\Database\Query\{closure}'
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                      line: 2695
                      function: onceWithColumns
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                      line: 710
                      function: get
                      class: Illuminate\Database\Query\Builder
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                      line: 694
                      function: getModels
                      class: Illuminate\Database\Eloquent\Builder
                      type: '->'
                    -
                      file: /var/www/vstore-backend/app/Http/Controllers/Api/BillController.php
                      line: 39
                      function: get
                      class: Illuminate\Database\Eloquent\Builder
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                      line: 54
                      function: index
                      class: App\Http\Controllers\Api\BillController
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                      line: 43
                      function: callAction
                      class: Illuminate\Routing\Controller
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 260
                      function: dispatch
                      class: Illuminate\Routing\ControllerDispatcher
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                      line: 205
                      function: runController
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 798
                      function: run
                      class: Illuminate\Routing\Route
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Routing\{closure}'
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                      line: 50
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\SubstituteBindings
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 126
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 102
                      function: handleRequest
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                      line: 54
                      function: handleRequestUsingNamedLimiter
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Routing\Middleware\ThrottleRequests
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 799
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 776
                      function: runRouteWithinStack
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 740
                      function: runRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                      line: 729
                      function: dispatchToRoute
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 190
                      function: dispatch
                      class: Illuminate\Routing\Router
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 141
                      function: 'Illuminate\Foundation\Http\{closure}'
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                      line: 31
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                      line: 21
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                      line: 40
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\TrimStrings
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                      line: 27
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                      line: 86
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                      line: 62
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\HandleCors
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                      line: 39
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 180
                      function: handle
                      class: Illuminate\Http\Middleware\TrustProxies
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                      line: 116
                      function: 'Illuminate\Pipeline\{closure}'
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 165
                      function: then
                      class: Illuminate\Pipeline\Pipeline
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                      line: 134
                      function: sendRequestThroughRouter
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 299
                      function: handle
                      class: Illuminate\Foundation\Http\Kernel
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 287
                      function: callLaravelOrLumenRoute
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 92
                      function: makeApiCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 45
                      function: makeResponseCall
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                      line: 35
                      function: makeResponseCallIfConditionsPass
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 209
                      function: __invoke
                      class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 166
                      function: iterateThroughStrategies
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                      line: 95
                      function: fetchResponses
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 124
                      function: processRoute
                      class: Knuckles\Scribe\Extracting\Extractor
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 71
                      function: extractEndpointsInfoFromLaravelApp
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                      line: 49
                      function: extractEndpointsInfoAndWriteToDisk
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                      line: 51
                      function: get
                      class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 36
                      function: handle
                      class: Knuckles\Scribe\Commands\GenerateDocumentation
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                      line: 41
                      function: 'Illuminate\Container\{closure}'
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 93
                      function: unwrapIfClosure
                      class: Illuminate\Container\Util
                      type: '::'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                      line: 37
                      function: callBoundMethod
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                      line: 661
                      function: call
                      class: Illuminate\Container\BoundMethod
                      type: '::'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 183
                      function: call
                      class: Illuminate\Container\Container
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/symfony/console/Command/Command.php
                      line: 312
                      function: execute
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                      line: 153
                      function: run
                      class: Symfony\Component\Console\Command\Command
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/symfony/console/Application.php
                      line: 1022
                      function: run
                      class: Illuminate\Console\Command
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/symfony/console/Application.php
                      line: 314
                      function: doRunCommand
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/symfony/console/Application.php
                      line: 168
                      function: doRun
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                      line: 102
                      function: run
                      class: Symfony\Component\Console\Application
                      type: '->'
                    -
                      file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                      line: 155
                      function: run
                      class: Illuminate\Console\Application
                      type: '->'
                    -
                      file: /var/www/vstore-backend/artisan
                      line: 37
                      function: handle
                      class: Illuminate\Foundation\Console\Kernel
                      type: '->'
                properties:
                  message:
                    type: string
                    example: "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'user_id' in 'where clause' (SQL: select * from `bills` where `user_id` = 18)"
                  exception:
                    type: string
                    example: Illuminate\Database\QueryException
                  file:
                    type: string
                    example: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                  line:
                    type: integer
                    example: 760
                  trace:
                    type: array
                    example:
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 720
                        function: runQueryCallback
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line: 422
                        function: run
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2706
                        function: select
                        class: Illuminate\Database\Connection
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2694
                        function: runSelect
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 3230
                        function: 'Illuminate\Database\Query\{closure}'
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php
                        line: 2695
                        function: onceWithColumns
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                        line: 710
                        function: get
                        class: Illuminate\Database\Query\Builder
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php
                        line: 694
                        function: getModels
                        class: Illuminate\Database\Eloquent\Builder
                        type: '->'
                      -
                        file: /var/www/vstore-backend/app/Http/Controllers/Api/BillController.php
                        line: 39
                        function: get
                        class: Illuminate\Database\Eloquent\Builder
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Controller.php
                        line: 54
                        function: index
                        class: App\Http\Controllers\Api\BillController
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/ControllerDispatcher.php
                        line: 43
                        function: callAction
                        class: Illuminate\Routing\Controller
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 260
                        function: dispatch
                        class: Illuminate\Routing\ControllerDispatcher
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Route.php
                        line: 205
                        function: runController
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 798
                        function: run
                        class: Illuminate\Routing\Route
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Routing\{closure}'
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/SubstituteBindings.php
                        line: 50
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\SubstituteBindings
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 126
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 102
                        function: handleRequest
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php
                        line: 54
                        function: handleRequestUsingNamedLimiter
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Routing\Middleware\ThrottleRequests
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 799
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 776
                        function: runRouteWithinStack
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 740
                        function: runRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Routing/Router.php
                        line: 729
                        function: dispatchToRoute
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 190
                        function: dispatch
                        class: Illuminate\Routing\Router
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 141
                        function: 'Illuminate\Foundation\Http\{closure}'
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php
                        line: 31
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php
                        line: 21
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php
                        line: 40
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TransformsRequest
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\TrimStrings
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php
                        line: 27
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\ValidatePostSize
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php
                        line: 86
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/HandleCors.php
                        line: 62
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\HandleCors
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php
                        line: 39
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 180
                        function: handle
                        class: Illuminate\Http\Middleware\TrustProxies
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php
                        line: 116
                        function: 'Illuminate\Pipeline\{closure}'
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 165
                        function: then
                        class: Illuminate\Pipeline\Pipeline
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php
                        line: 134
                        function: sendRequestThroughRouter
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 299
                        function: handle
                        class: Illuminate\Foundation\Http\Kernel
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 287
                        function: callLaravelOrLumenRoute
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 92
                        function: makeApiCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 45
                        function: makeResponseCall
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php
                        line: 35
                        function: makeResponseCallIfConditionsPass
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 209
                        function: __invoke
                        class: Knuckles\Scribe\Extracting\Strategies\Responses\ResponseCalls
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 166
                        function: iterateThroughStrategies
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php
                        line: 95
                        function: fetchResponses
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 124
                        function: processRoute
                        class: Knuckles\Scribe\Extracting\Extractor
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 71
                        function: extractEndpointsInfoFromLaravelApp
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php
                        line: 49
                        function: extractEndpointsInfoAndWriteToDisk
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php
                        line: 51
                        function: get
                        class: Knuckles\Scribe\GroupedEndpoints\GroupedEndpointsFromApp
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 36
                        function: handle
                        class: Knuckles\Scribe\Commands\GenerateDocumentation
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/Util.php
                        line: 41
                        function: 'Illuminate\Container\{closure}'
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 93
                        function: unwrapIfClosure
                        class: Illuminate\Container\Util
                        type: '::'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php
                        line: 37
                        function: callBoundMethod
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Container/Container.php
                        line: 661
                        function: call
                        class: Illuminate\Container\BoundMethod
                        type: '::'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 183
                        function: call
                        class: Illuminate\Container\Container
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/symfony/console/Command/Command.php
                        line: 312
                        function: execute
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Console/Command.php
                        line: 153
                        function: run
                        class: Symfony\Component\Console\Command\Command
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/symfony/console/Application.php
                        line: 1022
                        function: run
                        class: Illuminate\Console\Command
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/symfony/console/Application.php
                        line: 314
                        function: doRunCommand
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/symfony/console/Application.php
                        line: 168
                        function: doRun
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Console/Application.php
                        line: 102
                        function: run
                        class: Symfony\Component\Console\Application
                        type: '->'
                      -
                        file: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php
                        line: 155
                        function: run
                        class: Illuminate\Console\Application
                        type: '->'
                      -
                        file: /var/www/vstore-backend/artisan
                        line: 37
                        function: handle
                        class: Illuminate\Foundation\Console\Kernel
                        type: '->'
                    items:
                      type: object
                      properties:
                        file:
                          type: string
                          example: /var/www/vstore-backend/vendor/laravel/framework/src/Illuminate/Database/Connection.php
                        line:
                          type: integer
                          example: 720
                        function:
                          type: string
                          example: runQueryCallback
                        class:
                          type: string
                          example: Illuminate\Database\Connection
                        type:
                          type: string
                          example: '->'
      tags:
        - Bill
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the bill.'
        example: 15
        required: true
        schema:
          type: integer
  /api/cart:
    get:
      summary: Cart
      operationId: cart
      description: 'API dùng để xem sản phẩm trong giỏ hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: consequatur
                is_pdone:
                  type: boolean
                  description: ''
                  example: false
              required:
                - user_id
                - is_pdone
      security: []
  '/api/cart/product/{id}':
    post:
      summary: 'Cart add'
      operationId: cartAdd
      description: 'API dùng để thêm sản phẩm vào giỏ hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: required
                  description: 'mã user của người dùng'
                  example: aperiam
                quantity:
                  type: 'required|numeric|min:1'
                  description: 'Số sản phẩm mua'
                  example: perspiciatis
                vshop_id:
                  type: required
                  description: 'mã v-shop'
                  example: explicabo
                is_pdone:
                  type: boolean
                  description: ''
                  example: true
              required:
                - is_pdone
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/cart/{id}/product/{productId}/quantity':
    post:
      summary: 'Cart quantity'
      operationId: cartQuantity
      description: 'API dùng để tăng giảm số lượng đơn vị sản phẩm trong giỏ hàng, 0 sẽ là xoá'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
                  description: 'Must be at least 0.'
                  example: 69
                vshop_id:
                  type: string
                  description: ''
                  example: perspiciatis
                user_id:
                  type: string
                  description: ''
                  example: et
                is_pdone:
                  type: boolean
                  description: ''
                  example: true
              required:
                - quantity
                - vshop_id
                - user_id
                - is_pdone
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cart.'
        example: 15
        required: true
        schema:
          type: integer
      -
        in: path
        name: productId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/banners/get-banner:
    get:
      summary: 'Lấy banner ở trang chủ'
      operationId: lyBannerTrangCh
      description: 'API dùng để lấy ảnh banner'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Cart
      security: []
  /api/categories:
    get:
      summary: 'Danh sách danh mục'
      operationId: danhSchDanhMc
      description: 'API này sẽ trả về danh sách danh mục'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Categories
      security: []
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: in
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang Mặc định 48'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: omnis
  '/api/categories/get-category-by-vstore/{vstore_id}':
    get:
      summary: 'Danh sách danh mục theo V-Store'
      operationId: danhSchDanhMcTheoVStore
      description: 'API này sẽ trả về danh sách danh mục theo vstore được chọn'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Categories
      security: []
    parameters:
      -
        in: path
        name: vstore_id
        description: 'The ID of the vstore.'
        example: nesciunt
        required: true
        schema:
          type: string
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi  Mặc định 100'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sequi
  '/api/categories/get-product-vstore-by-category/{category_id}':
    get:
      summary: 'Chi tiết danh mục'
      operationId: chiTitDanhMc
      description: 'API này sẽ trả về danh sách sản phẩm theo danh mục và các Vstore niêm yết sản phẩm thuộc danh mục đó'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Categories
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: consequuntur
        required: true
        schema:
          type: string
      -
        in: path
        name: pdone_id
        description: 'Optional parameter. Id user Vshop (truyền khi user đang đăng nhập là đang là VSHOP)'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: qui
  '/api/categories/get-product-by-category/{category_id}':
    get:
      summary: 'Danh sách sản phẩm theo danh mục'
      operationId: danhSchSnPhmTheoDanhMc
      description: 'API này sẽ trả về danh sách sản phẩm theo danh mục'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Categories
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: consectetur
        required: true
        schema:
          type: string
      -
        in: path
        name: pdone_id
        description: 'Optional parameter. Id user Vshop (truyền khi user là đang đăng nhập là VSHOP)'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: impedit
      -
        in: path
        name: orderById
        description: 'Optional parameter. Sắp sếp sản phẩm mới nhất asc|desc Mặc định asc VD: orderById=asc'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: nobis
      -
        in: path
        name: amount_product_sold
        description: 'Optional parameter. Sắp sếp sản phẩm bán chạy asc|desc VD: amount_product_sold=desc'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: nobis
      -
        in: path
        name: orderByPrice
        description: 'Optional parameter. Sắp sếp theo giá sản phẩm asc|desc VD: orderByPrice=asc'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: aut
      -
        in: path
        name: paymentMethod
        description: 'Optional parameter. Phương thức thanh toán 1 COD | 2 Chuyển khoản'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ea
      -
        in: path
        name: page
        description: 'Optional parameter. Trang hiện tại'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: inventore
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi 1 trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ducimus
  '/api/categories/get-all-vstore-by-category/{category_id}':
    get:
      summary: 'Danh sách tất cả vstore tiếp thị sản phẩm có danh mục được chọn'
      operationId: danhSchTtCVstoreTipThSnPhmCDanhMccChn
      description: 'API này sẽ trả về danh sách tất cả vstore tiếp thị sản phẩm có danh mục được chọn'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Categories
      security: []
    parameters:
      -
        in: path
        name: category_id
        description: 'The ID of the category.'
        example: qui
        required: true
        schema:
          type: string
  /api/discount/get-discount:
    get:
      summary: Bill
      operationId: bill
      description: 'API dùng trả về % giảm giá dựa trên số lượng sản phẩm V-Shop lấy hàng sẵn'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Discount
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: id
                  description: 'sản phẩm'
                  example: veniam
                total:
                  type: số
                  description: 'lượng sản phẩm'
                  example: quis
      security: []
  '/api/discount/available-discount/{id}':
    get:
      summary: Bill
      operationId: bill
      description: 'API dùng trả về % giảm giá dựa trên số lượng sản phẩm'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Discount
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. id sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: fugit
  /api/callback-viettel-post:
    post:
      summary: ''
      operationId: postApiCallbackViettelPost
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/get-province:
    get:
      summary: 'danh sách tỉnh thành'
      operationId: danhSchTnhThnh
      description: 'API này sẽ trả về danh sách tỉnh thành'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      security: []
  '/api/get-district/{id}':
    get:
      summary: 'danh sách quận huyện'
      operationId: danhSchQunHuyn
      description: 'API này sẽ trả về danh sách quận huyện'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the get district.'
        example: odio
        required: true
        schema:
          type: string
  '/api/get-wards/{id}':
    get:
      summary: 'danh sách xã phường'
      operationId: danhSchXPhng
      description: 'API này sẽ trả về danh sách quận huyện'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the get ward.'
        example: qui
        required: true
        schema:
          type: string
  '/api/order/{id}/payment':
    post:
      summary: 'Thanh toán'
      operationId: thanhTon
      description: 'API dùng để thanh toán'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                method_payment:
                  type: string
                  description: 'Must be one of <code>ATM_CARD</code>, <code>CREDIT_CARD</code>, <code>9PAY</code>, <code>BANK_TRANSFER</code>, or <code>COD</code>.'
                  example: COD
                user_id:
                  type: string
                  description: ''
                  example: dolorem
                is_pdone:
                  type: boolean
                  description: ''
                  example: false
              required:
                - method_payment
                - user_id
                - is_pdone
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the order.'
        example: 1001
        required: true
        schema:
          type: integer
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/storage/dashboard:
    get:
      summary: ''
      operationId: getApiStorageDashboard
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/products:
    get:
      summary: ''
      operationId: getApiStorageProducts
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/products/detail:
    get:
      summary: ''
      operationId: getApiStorageProductsDetail
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/products/request:
    get:
      summary: ''
      operationId: getApiStorageProductsRequest
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/storage/products/request/update/{status}':
    put:
      summary: ''
      operationId: putApiStorageProductsRequestUpdateStatus
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: status
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  /api/storage/products/requestOut:
    get:
      summary: ''
      operationId: getApiStorageProductsRequestOut
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/products/detail-request:
    get:
      summary: ''
      operationId: getApiStorageProductsDetailRequest
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/products/detail-request-out:
    get:
      summary: ''
      operationId: getApiStorageProductsDetailRequestOut
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/storage/products/requestOut/update/{status}':
    put:
      summary: ''
      operationId: putApiStorageProductsRequestOutUpdateStatus
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: status
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/storage/products/info/{sku}':
    get:
      summary: ''
      operationId: getApiStorageProductsInfoSku
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: sku
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
  '/api/storage/products/bill/{order_id}':
    get:
      summary: ''
      operationId: getApiStorageProductsBillOrder_id
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: 18
        required: true
        schema:
          type: integer
  /api/storage/account:
    get:
      summary: ''
      operationId: getApiStorageAccount
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/storage/account/edit/{id}':
    post:
      summary: ''
      operationId: postApiStorageAccountEditId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: consectetur
                company_name:
                  type: string
                  description: ''
                  example: veniam
                address:
                  type: string
                  description: ''
                  example: cumque
                phone_number:
                  type: string
                  description: 'Must match the regex /(84.'
                  example: (84
                id_vdone:
                  type: string
                  description: ''
                  example: natus
                floor_area:
                  type: string
                  description: ''
                  example: commodi
                volume:
                  type: string
                  description: ''
                  example: dolore
                cold_storage:
                  type: string
                  description: ''
                  example: quo
                warehouse:
                  type: string
                  description: ''
                  example: enim
                normal_storage:
                  type: string
                  description: ''
                  example: et
              required:
                - name
                - company_name
                - address
                - phone_number
                - id_vdone
                - floor_area
                - volume
                - cold_storage
                - warehouse
                - normal_storage
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the edit.'
        example: illo
        required: true
        schema:
          type: string
  '/api/storage/account/upload/{id}':
    post:
      summary: ''
      operationId: postApiStorageAccountUploadId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the upload.'
        example: cumque
        required: true
        schema:
          type: string
  /api/storage/account/change-password:
    get:
      summary: ''
      operationId: getApiStorageAccountChangePassword
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiStorageAccountChangePassword
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: 'Must match the regex /^.*(?=.{3,})(?=.*[a-zA-Z])(?=.*[0-9])(?=.*[\d\x])(?=.*[!$@#%]).*$/. Must be at least 8 characters.'
                  example: 'd<P:3.ef!}+_9HZ>'
              required:
                - password
      security: []
  /api/storage/account/edit-tax-code:
    get:
      summary: ''
      operationId: getApiStorageAccountEditTaxCode
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/account/save-tax-code:
    put:
      summary: ''
      operationId: putApiStorageAccountSaveTaxCode
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tax_code:
                  type: string
                  description: 'Must be 10 digits.'
                  example: '0631196934'
              required:
                - tax_code
      security: []
  /api/storage/warehouses/import:
    get:
      summary: ''
      operationId: getApiStorageWarehousesImport
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/warehouses/export:
    get:
      summary: ''
      operationId: getApiStorageWarehousesExport
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/warehouses/confirm-export:
    put:
      summary: ''
      operationId: putApiStorageWarehousesConfirmExport
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/storage/warehouses/destroy-export:
    get:
      summary: ''
      operationId: getApiStorageWarehousesDestroyExport
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/warehouses/create/destroy-export:
    get:
      summary: ''
      operationId: getApiStorageWarehousesCreateDestroyExport
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/warehouses/store/destroy-export:
    post:
      summary: ''
      operationId: postApiStorageWarehousesStoreDestroyExport
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                  description: ''
                  example: quaerat
                quantity:
                  type: string
                  description: ''
                  example: quis
                warehouse_id:
                  type: string
                  description: ''
                  example: in
                note:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: utoxiosotdgc
              required:
                - product_id
                - quantity
                - warehouse_id
                - note
      security: []
  /api/storage/warehouses/destroy:
    get:
      summary: ''
      operationId: getApiStorageWarehousesDestroy
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/warehouses/detail:
    get:
      summary: ''
      operationId: getApiStorageWarehousesDetail
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/warehouses/detail-destroy:
    get:
      summary: ''
      operationId: getApiStorageWarehousesDetailDestroy
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/finances:
    get:
      summary: ''
      operationId: getApiStorageFinances
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/storage/finances/store-wallet:
    post:
      summary: ''
      operationId: postApiStorageFinancesStoreWallet
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_number:
                  type: string
                  description: ''
                  example: aut
                bank_id:
                  type: string
                  description: ''
                  example: sapiente
                name:
                  type: string
                  description: ''
                  example: iure
              required:
                - account_number
                - bank_id
                - name
      security: []
  '/api/storage/finances/update-wallet/{id}':
    put:
      summary: ''
      operationId: putApiStorageFinancesUpdateWalletId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                account_number:
                  type: string
                  description: ''
                  example: iure
                bank_id:
                  type: string
                  description: ''
                  example: et
                name:
                  type: string
                  description: ''
                  example: sit
              required:
                - account_number
                - bank_id
                - name
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update wallet.'
        example: corporis
        required: true
        schema:
          type: string
  /api/storage/finances/create-deposit:
    post:
      summary: ''
      operationId: postApiStorageFinancesCreateDeposit
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/storage/finances/history:
    get:
      summary: ''
      operationId: getApiStorageFinancesHistory
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/storage/finances/destroy-wa/{id}':
    delete:
      summary: ''
      operationId: deleteApiStorageFinancesDestroyWaId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the destroy wa.'
        example: maiores
        required: true
        schema:
          type: string
  /api/storage/partners:
    get:
      summary: 'danh sách Nhà cung cấp'
      operationId: danhSchNhCungCp
      description: 'API này sẽ trả về danh sách Nhà cung cấp'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: ':'
                  description: 'tìm kiếm qua mã, tên ncc'
                  example: eos
                limit:
                  type: tổng
                  description: 'số review / 1 trang'
                  example: dolores
      security: []
  /api/storage/partners/detail-ncc:
    get:
      summary: 'chi tiết Nhà cung cấp'
      operationId: chiTitNhCungCp
      description: 'API này sẽ trả về chi tiết Nhà cung cấp'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: ':'
                  description: 'user id'
                  example: modi
      security: []
  /api/storage/partners/delivery-partner:
    get:
      summary: 'danh sách đối tác giao hàng'
      operationId: danhSchiTcGiaoHng
      description: 'API này sẽ trả về danh sách đối tác giao hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: tổng
                  description: 'số review / 1 trang'
                  example: voluptatem
      security: []
  /api/storage/partners/detail-delivery-partner:
    get:
      summary: 'chi tiết đối tác giao hàng'
      operationId: chiTitiTcGiaoHng
      description: 'API này sẽ trả về chi tiết đối tác giao hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: ':'
                  description: 'user id'
                  example: et
      security: []
  /api/test:
    get:
      summary: ''
      operationId: getApiTest
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      security: []
  /api/get-city:
    get:
      summary: ''
      operationId: getApiGetCity
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    PROVINCE_ID: 1
                    PROVINCE_CODE: HNI
                    PROVINCE_NAME: 'Hà Nội'
                  -
                    PROVINCE_ID: 2
                    PROVINCE_CODE: HCM
                    PROVINCE_NAME: 'Hồ Chí Minh'
                  -
                    PROVINCE_ID: 3
                    PROVINCE_CODE: HPG
                    PROVINCE_NAME: 'Hải Phòng'
                  -
                    PROVINCE_ID: 4
                    PROVINCE_CODE: DNG
                    PROVINCE_NAME: 'Đà Nẵng'
                  -
                    PROVINCE_ID: 5
                    PROVINCE_CODE: CTO
                    PROVINCE_NAME: 'Cần Thơ'
                  -
                    PROVINCE_ID: 6
                    PROVINCE_CODE: TGG
                    PROVINCE_NAME: 'Tiền Giang'
                  -
                    PROVINCE_ID: 8
                    PROVINCE_CODE: HUG
                    PROVINCE_NAME: 'Hậu Giang'
                  -
                    PROVINCE_ID: 9
                    PROVINCE_CODE: DKG
                    PROVINCE_NAME: 'Đăk Nông'
                  -
                    PROVINCE_ID: 10
                    PROVINCE_CODE: VPC
                    PROVINCE_NAME: 'Vĩnh Phúc'
                  -
                    PROVINCE_ID: 11
                    PROVINCE_CODE: BNH
                    PROVINCE_NAME: 'Bắc Ninh'
                  -
                    PROVINCE_ID: 12
                    PROVINCE_CODE: HDG
                    PROVINCE_NAME: 'Hải Dương'
                  -
                    PROVINCE_ID: 13
                    PROVINCE_CODE: HYN
                    PROVINCE_NAME: 'Hưng Yên'
                  -
                    PROVINCE_ID: 14
                    PROVINCE_CODE: HNM
                    PROVINCE_NAME: 'Hà Nam'
                  -
                    PROVINCE_ID: 15
                    PROVINCE_CODE: NDH
                    PROVINCE_NAME: 'Nam Ðịnh'
                  -
                    PROVINCE_ID: 16
                    PROVINCE_CODE: TBH
                    PROVINCE_NAME: 'Thái Bình'
                  -
                    PROVINCE_ID: 17
                    PROVINCE_CODE: NBH
                    PROVINCE_NAME: 'Ninh Bình'
                  -
                    PROVINCE_ID: 18
                    PROVINCE_CODE: HGG
                    PROVINCE_NAME: 'Hà Giang'
                  -
                    PROVINCE_ID: 19
                    PROVINCE_CODE: CBG
                    PROVINCE_NAME: 'Cao Bằng'
                  -
                    PROVINCE_ID: 20
                    PROVINCE_CODE: LCI
                    PROVINCE_NAME: 'Lào Cai'
                  -
                    PROVINCE_ID: 21
                    PROVINCE_CODE: BKN
                    PROVINCE_NAME: 'Bắc Kạn'
                  -
                    PROVINCE_ID: 22
                    PROVINCE_CODE: LSN
                    PROVINCE_NAME: 'Lạng Sơn'
                  -
                    PROVINCE_ID: 23
                    PROVINCE_CODE: TQG
                    PROVINCE_NAME: 'Tuyên Quang'
                  -
                    PROVINCE_ID: 24
                    PROVINCE_CODE: YBN
                    PROVINCE_NAME: 'Yên Bái'
                  -
                    PROVINCE_ID: 25
                    PROVINCE_CODE: TNN
                    PROVINCE_NAME: 'Thái Nguyên'
                  -
                    PROVINCE_ID: 26
                    PROVINCE_CODE: PHO
                    PROVINCE_NAME: 'Phú Thọ'
                  -
                    PROVINCE_ID: 27
                    PROVINCE_CODE: BGG
                    PROVINCE_NAME: 'Bắc Giang'
                  -
                    PROVINCE_ID: 28
                    PROVINCE_CODE: QNH
                    PROVINCE_NAME: 'Quảng Ninh'
                  -
                    PROVINCE_ID: 29
                    PROVINCE_CODE: LCU
                    PROVINCE_NAME: 'Lai Châu'
                  -
                    PROVINCE_ID: 30
                    PROVINCE_CODE: SLA
                    PROVINCE_NAME: 'Sơn La'
                  -
                    PROVINCE_ID: 31
                    PROVINCE_CODE: HBH
                    PROVINCE_NAME: 'Hòa Bình'
                  -
                    PROVINCE_ID: 32
                    PROVINCE_CODE: THA
                    PROVINCE_NAME: 'Thanh Hóa'
                  -
                    PROVINCE_ID: 33
                    PROVINCE_CODE: NAN
                    PROVINCE_NAME: 'Nghệ An'
                  -
                    PROVINCE_ID: 34
                    PROVINCE_CODE: HTH
                    PROVINCE_NAME: 'Hà Tĩnh'
                  -
                    PROVINCE_ID: 35
                    PROVINCE_CODE: QBH
                    PROVINCE_NAME: 'Quảng Bình'
                  -
                    PROVINCE_ID: 36
                    PROVINCE_CODE: QTI
                    PROVINCE_NAME: 'Quảng Trị'
                  -
                    PROVINCE_ID: 37
                    PROVINCE_CODE: HUE
                    PROVINCE_NAME: 'Thừa Thiên - Huế'
                  -
                    PROVINCE_ID: 38
                    PROVINCE_CODE: QNM
                    PROVINCE_NAME: 'Quảng Nam'
                  -
                    PROVINCE_ID: 39
                    PROVINCE_CODE: QNI
                    PROVINCE_NAME: 'Quảng Ngãi'
                  -
                    PROVINCE_ID: 40
                    PROVINCE_CODE: BDH
                    PROVINCE_NAME: 'Bình Ðịnh'
                  -
                    PROVINCE_ID: 41
                    PROVINCE_CODE: PYN
                    PROVINCE_NAME: 'Phú Yên'
                  -
                    PROVINCE_ID: 42
                    PROVINCE_CODE: KHA
                    PROVINCE_NAME: 'Khánh Hòa'
                  -
                    PROVINCE_ID: 43
                    PROVINCE_CODE: KTM
                    PROVINCE_NAME: 'Kon Tum'
                  -
                    PROVINCE_ID: 44
                    PROVINCE_CODE: GLI
                    PROVINCE_NAME: 'Gia Lai'
                  -
                    PROVINCE_ID: 45
                    PROVINCE_CODE: DLK
                    PROVINCE_NAME: 'Đăk Lăk'
                  -
                    PROVINCE_ID: 46
                    PROVINCE_CODE: LDG
                    PROVINCE_NAME: 'Lâm Ðồng'
                  -
                    PROVINCE_ID: 47
                    PROVINCE_CODE: NTN
                    PROVINCE_NAME: 'Ninh Thuận'
                  -
                    PROVINCE_ID: 48
                    PROVINCE_CODE: BPC
                    PROVINCE_NAME: 'Bình Phước'
                  -
                    PROVINCE_ID: 49
                    PROVINCE_CODE: TNH
                    PROVINCE_NAME: 'Tây Ninh'
                  -
                    PROVINCE_ID: 50
                    PROVINCE_CODE: BDG
                    PROVINCE_NAME: 'Bình Dương'
                  -
                    PROVINCE_ID: 51
                    PROVINCE_CODE: DNI
                    PROVINCE_NAME: 'Đồng Nai'
                  -
                    PROVINCE_ID: 52
                    PROVINCE_CODE: BTN
                    PROVINCE_NAME: 'Bình Thuận'
                  -
                    PROVINCE_ID: 53
                    PROVINCE_CODE: VTU
                    PROVINCE_NAME: 'Bà rịa - Vũng tàu'
                  -
                    PROVINCE_ID: 54
                    PROVINCE_CODE: LAN
                    PROVINCE_NAME: 'Long An'
                  -
                    PROVINCE_ID: 55
                    PROVINCE_CODE: DTP
                    PROVINCE_NAME: 'Đồng Tháp'
                  -
                    PROVINCE_ID: 56
                    PROVINCE_CODE: AGG
                    PROVINCE_NAME: 'An Giang'
                  -
                    PROVINCE_ID: 57
                    PROVINCE_CODE: VLG
                    PROVINCE_NAME: 'Vĩnh Long'
                  -
                    PROVINCE_ID: 58
                    PROVINCE_CODE: BTE
                    PROVINCE_NAME: 'Bến Tre'
                  -
                    PROVINCE_ID: 59
                    PROVINCE_CODE: KGG
                    PROVINCE_NAME: 'Kiên Giang'
                  -
                    PROVINCE_ID: 60
                    PROVINCE_CODE: TVH
                    PROVINCE_NAME: 'Trà Vinh'
                  -
                    PROVINCE_ID: 61
                    PROVINCE_CODE: STG
                    PROVINCE_NAME: 'Sóc Trăng'
                  -
                    PROVINCE_ID: 62
                    PROVINCE_CODE: BLU
                    PROVINCE_NAME: 'Bạc Liêu'
                  -
                    PROVINCE_ID: 63
                    PROVINCE_CODE: CMU
                    PROVINCE_NAME: 'Cà Mau'
                  -
                    PROVINCE_ID: 64
                    PROVINCE_CODE: DBN
                    PROVINCE_NAME: 'Điện Biên'
      tags:
        - Endpoints
      security: []
  /api/finances/get-list-bank:
    get:
      summary: 'Danh sách ngân hàng'
      operationId: danhSchNgnHng
      description: 'API này sẽ trả về danh sách thông tin ngân hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Finance
      security: []
  '/api/finances/get-bank-id/{bank_id}':
    get:
      summary: 'chi tiết ngân hàng'
      operationId: chiTitNgnHng
      description: 'API này sé lấy ra chi tiết ngân hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Finance
      security: []
    parameters:
      -
        in: path
        name: bank_id
        description: 'The ID of the bank.'
        example: cupiditate
        required: true
        schema:
          type: string
  '/api/finances/wallet/{pdone_id}':
    get:
      summary: 'Thông tin ví'
      operationId: thngTinV
      description: 'API này sẽ trả về thông tin ví'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Finance
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: 3
        required: true
        schema:
          type: integer
  '/api/finances/wallet/edit/{wallet_id}':
    get:
      summary: 'Cập nhật ví'
      operationId: cpNhtV
      description: 'API này sẽ trả về dể cập nhật ví'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Finance
      security: []
    parameters:
      -
        in: path
        name: wallet_id
        description: 'The ID of the wallet.'
        example: nostrum
        required: true
        schema:
          type: string
      -
        in: path
        name: pdone_id
        description: 'Optional parameter. id user vshop'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: eligendi
  '/api/finances/wallet/update/{wallet_id}':
    put:
      summary: 'Cập nhật tài khoản ngân hàng'
      operationId: cpNhtTiKhonNgnHng
      description: 'API này sẽ cập nhật thông tin ngân hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Finance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                pdone_id:
                  type: id
                  description: 'user vshop'
                  example: et
                bank_id:
                  type: id
                  description: 'ngân hàng được chọn'
                  example: ipsam
                account_code:
                  type: Số
                  description: 'tài khoản ngân hàng'
                  example: dolor
                name:
                  type: Tên
                  description: 'chủ tài khoản'
                  example: et
      security: []
    parameters:
      -
        in: path
        name: wallet_id
        description: 'The ID of the wallet.'
        example: minima
        required: true
        schema:
          type: string
  /api/finances/wallet/store:
    post:
      summary: 'Thêm mới ngân hàng'
      operationId: thmMiNgnHng
      description: 'API này sẽ lưu mới thông tin ngân hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Finance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                pdone_id:
                  type: id
                  description: 'user vshop'
                  example: ut
                bank_id:
                  type: id
                  description: 'ngân hàng được chọn'
                  example: odit
                account_code:
                  type: Số
                  description: 'tài khoản ngân hàng'
                  example: quia
                name:
                  type: Tên
                  description: 'chủ tài khoản'
                  example: debitis
      security: []
  '/api/finances/wallet/store-deposit/{wallet_id}':
    post:
      summary: 'Tạo lệnh rút tiền'
      operationId: toLnhRtTin
      description: 'API này sẽ tạo mới lệnh rút tiền'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Finance
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                pdone_id:
                  type: id
                  description: 'user vshop'
                  example: vero
                amount:
                  type: Số
                  description: 'tiên rút'
                  example: sed
      security: []
    parameters:
      -
        in: path
        name: wallet_id
        description: 'The ID of the wallet.'
        example: velit
        required: true
        schema:
          type: string
  '/api/finances/get-surplus/{pdone_id}':
    get:
      summary: 'Trả ra số dư của vshop'
      operationId: trRaSDCaVshop
      description: 'API này sẽ trả về số dư cửa Vshop'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Finance
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: similique
        required: true
        schema:
          type: string
  /api/manufactures/get-list:
    get:
      summary: 'Danh sách nhà cung cấp'
      operationId: danhSchNhCungCp
      description: 'API này sẽ trả về sách Nhà cung cấp'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Manufacture
      security: []
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: tempore
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang | Mặc định 100 bản ghi'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: accusamus
  '/api/manufactures/profile/{ncc_id}':
    get:
      summary: 'chi tiết nhà cung cấp'
      operationId: chiTitNhCungCp
      description: 'API này sẽ trả về thông tin nhà cung cấp'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Manufacture
      security: []
    parameters:
      -
        in: path
        name: ncc_id
        description: 'The ID of the ncc.'
        example: explicabo
        required: true
        schema:
          type: string
  /api/order/checkout:
    post:
      summary: ''
      operationId: postApiOrderCheckout
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Oder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: sed
                is_pdone:
                  type: boolean
                  description: ''
                  example: true
                product_id:
                  type: string
                  description: ''
                  example: modi
                vshop_id:
                  type: string
                  description: ''
                  example: laboriosam
                quantity:
                  type: number
                  description: ''
                  example: 6611197.5209
                method_payment:
                  type: string
                  description: 'Must be one of <code>ATM_CARD</code>, <code>CREDIT_CARD</code>, <code>9PAY</code>, <code>BANK_TRANSFER</code>, or <code>COD</code>.'
                  example: CREDIT_CARD
              required:
                - user_id
                - is_pdone
                - product_id
                - vshop_id
                - quantity
                - method_payment
      security: []
  '/api/order/user/get-list/{id}':
    get:
      summary: 'danh sách đơn hàng theo user'
      operationId: danhSchnHngTheoUser
      description: 'API này sẽ trả danh sách đơn hàng theo user'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Oder
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the get list.'
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: status
        description: 'Optional parameter. trạng thái đơn hàng 0 trạng thái chờ xác nhận,1 chờ giao hàng ,2 đang giao hàng , 4 đã giao hàng,5 đã hoàn thành'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: accusantium
  '/api/order/user/detail/{order_id}':
    get:
      summary: 'chi tiết đơn hàng theo id'
      operationId: chiTitnHngTheoId
      description: 'API này sẽ trả về chi tiết đơn hàng theo id'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Oder
      security: []
    parameters:
      -
        in: path
        name: order_id
        description: 'The ID of the order.'
        example: eos
        required: true
        schema:
          type: string
  '/api/order/vshop/get-list/{pdone_id}':
    get:
      summary: 'danh sách đơn hàng theo vshop'
      operationId: danhSchnHngTheoVshop
      description: 'API này sẽ trả danh sách đơn hàng theo vshop'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Oder
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: ratione
        required: true
        schema:
          type: string
      -
        in: path
        name: status
        description: 'Optional parameter. trạng thái đơn hàng 0 trạng thái chờ xác nhận,1 chờ giao hàng ,2 đang giao hàng , 4 đã giao hàng,5 đã hoàn thành'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: dolore
  /api/order/refuse-order:
    get:
      summary: 'khách từ chối nhận/ huỷ đơn hàng'
      operationId: khchTChiNhnHunHng
      description: 'API dùng khi khách hàng huỷ đơn hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Oder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: descriptions
                  description: order
                  example: et
                descriptions:
                  type: string
                  description: 'Must not be greater than 200 characters.'
                  example: oezjemjhxncpz
              required:
                - descriptions
      security: []
  /api/order/detail-order-cancel:
    get:
      summary: 'chi tiết Đơn hàng hủy'
      operationId: chiTitnHngHy
      description: 'API dùng khi hiện chi tiết Đơn hàng hủy'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Oder
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: id
                  description: order
                  example: et
      security: []
  /api/order/update-amount-warehouse:
    put:
      summary: 'cập nhật lại số lượng kho khi Đơn hàng hủy bởi khách hàng'
      operationId: cpNhtLiSLngKhoKhinHngHyBiKhchHng
      description: 'API dùng cập nhật lại số lượng kho khi Đơn hàng hủy bởi khách hàng'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Oder
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: id
                  description: order
                  example: natus
      security: []
  /api/products:
    get:
      summary: 'Danh sách sản phẩm'
      operationId: danhSchSnPhm
      description: 'API này sẽ trả về thông tin hiển thị sản phẩm'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: architecto
      -
        in: path
        name: category_id
        description: 'Optional parameter. id danh mục sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: repellat
      -
        in: path
        name: order_by
        description: 'Optional parameter. (1,2,3) 1 Sắp xếp theo id,2 sắp xếp theo giá,3 sắp xếp theo số hàng đã bán'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: minus
      -
        in: path
        name: option
        description: 'Optional parameter. (asc,desc)'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ut
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang Mặc định 10'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: consectetur
      -
        in: path
        name: type_pay
        description: 'Optional parameter. Phương thức thanh toán 1 thanh toán trước | 2 cả 2'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: accusantium
  /api/products/search:
    get:
      summary: 'Tìm kiếm sản phẩm theo tên'
      operationId: tmKimSnPhmTheoTn
      description: 'API này sẽ trả về danh sách sản phẩm có tên chứa kí tự tìm kiếm và bộ lọc'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key_word:
                  type: string
                  description: ''
                  example: optio
              required:
                - key_word
      security: []
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: minus
      -
        in: path
        name: category_id
        description: 'Optional parameter. id danh mục sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: totam
      -
        in: path
        name: key_word
        description: 'Optional parameter. Từ khóa tìm kiếm sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: aut
      -
        in: path
        name: order_by
        description: 'Optional parameter. (1,2,3) 1 Sắp xếp theo id,2 sắp xếp theo giá,3 sắp xếp theo số hàng đã bán'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: vel
      -
        in: path
        name: option
        description: 'Optional parameter. (asc,desc)'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: consequatur
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang Mặc định 10'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: voluptatibus
      -
        in: path
        name: type_pay
        description: 'Optional parameter. Phương thức thanh toán 1 thanh toán trước | 2 cả 2'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: recusandae
  '/api/products/product-by-category/{id}':
    get:
      summary: 'Danh sách sản phẩm theo danh mục'
      operationId: danhSchSnPhmTheoDanhMc
      description: 'API này sẽ trả về sản phẩm theo danh mục'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product by category.'
        example: ex
        required: true
        schema:
          type: string
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ipsum
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: amet
  '/api/products/product-by-vstore/{id}':
    get:
      summary: 'Danh sách sản phẩm vstore'
      operationId: danhSchSnPhmVstore
      description: 'API này sẽ trả về sách sản phẩm vstore'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product by vstore.'
        example: quam
        required: true
        schema:
          type: string
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: doloremque
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: numquam
      -
        in: path
        name: publish_id
        description: 'Optional parameter. tìm kiếm theo mã sản phẩm mã sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: voluptatibus
      -
        in: path
        name: category_id
        description: 'Optional parameter. tìm kiếm theo danh mục'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: molestiae
      -
        in: path
        name: order_by_price
        description: 'Optional parameter. sắp xếp theo giá'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: pariatur
      -
        in: path
        name: order_by_id
        description: 'Optional parameter. sắp xếp theo id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: officiis
      -
        in: path
        name: order_by_sold
        description: 'Optional parameter. sắp xếp theo sl đã bán'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: quis
      -
        in: path
        name: payments
        description: 'Optional parameter. sắp xếp theo hình thức thanh toán 1 là COD 2 là trả trước'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: modi
  '/api/products/product-by-ncc/{id}':
    get:
      summary: 'Danh sách sản phẩm nhà cung cấp'
      operationId: danhSchSnPhmNhCungCp
      description: 'API này sẽ trả về thông tin hiển thị sản phẩm nhà cung cấp'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product by ncc.'
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: vitae
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: maiores
      -
        in: path
        name: publish_id
        description: 'Optional parameter. tìm kiếm theo mã sản phẩm mã sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: et
      -
        in: path
        name: category_id
        description: 'Optional parameter. tìm kiếm theo danh mục'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: suscipit
      -
        in: path
        name: order_by_price
        description: 'Optional parameter. sắp xếp theo giá'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: minima
      -
        in: path
        name: order_by_id
        description: 'Optional parameter. sắp xếp theo id'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: nam
      -
        in: path
        name: order_by_sold
        description: 'Optional parameter. sắp xếp theo sl đã bán'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ducimus
      -
        in: path
        name: payments
        description: 'Optional parameter. sắp xếp theo hình thức thanh toán 1 là COD 2 là trả trước'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: omnis
  '/api/products/vshop-pickup/{id}':
    post:
      summary: 'Vshop thêm sản phẩm'
      operationId: vshopThmSnPhm
      description: 'API dùng để Vshop thêm sản phẩm'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Product
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                pdone_id:
                  type: id
                  description: 'của pdone'
                  example: enim
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vshop pickup.'
        example: autem
        required: true
        schema:
          type: string
  '/api/products/vshop-ready-stock/{id}':
    post:
      summary: 'Vshop Nhập hàng sẵn'
      operationId: vshopNhpHngSn
      description: 'API dùng để Vshop nhập hàng sẵn'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Product
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                pdone_id:
                  type: id
                  description: 'của pdone'
                  example: quibusdam
                amount:
                  type: số
                  description: 'lượng sản phẩm'
                  example: quo
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vshop ready stock.'
        example: vel
        required: true
        schema:
          type: string
  '/api/products/product-by-vshop/{pdone_id}':
    get:
      summary: 'sản phẩm Vshop'
      operationId: snPhmVshop
      description: 'API lấy danh sách sản phẩm theo vshop'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: in
        required: true
        schema:
          type: string
      -
        in: path
        name: orderBy
        description: "Optional parameter. id Mới nhất | amount_product_sold Bán chạy | price Giá\nurlParam type  asc|desc Mặc định asc"
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: omnis
  '/api/products/product-available-by-vshop/{pdone_id}':
    get:
      summary: 'sản phẩm Vshop tiếp thị và nhâp sẵn'
      operationId: snPhmVshopTipThVNhpSn
      description: 'API lấy danh sách sản phẩm theo vshop'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: nostrum
        required: true
        schema:
          type: string
      -
        in: path
        name: orderBy
        description: 'Optional parameter. 1 Số lượng sản phẩm còn lại | 2 Số sản phẩm đã bán | 3 Tỷ lệ bán sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: sunt
      -
        in: path
        name: status
        description: "Optional parameter. 1 tiếp thị | 2 nhập sẵn\nurlParam type  asc|desc Mặc định asc\n\nvshop_discount mã giảm giá == null thì được tạo != null thì chuyển trạng thái sang sửa"
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 18
  '/api/products/create-bill/{pdone_id}':
    get:
      summary: 'Tạo mới bill vãng lai'
      operationId: toMiBillVngLai
      description: 'API lấy danh sách sản phẩm để tạo bill vãng lai'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: perferendis
        required: true
        schema:
          type: string
  '/api/products/save-bill/{pdone_id}':
    post:
      summary: ''
      operationId: postApiProductsSaveBillPdone_id
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: sed
        required: true
        schema:
          type: string
  '/api/products/{id}':
    get:
      summary: 'Chi tiết sản phẩm'
      operationId: chiTitSnPhm
      description: 'API dùng để lấy chi tiết 1 sản phẩm'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: pdone_id
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: rem
  '/api/products/destroy-affiliate/{pdone_id}/{product_id}':
    delete:
      summary: 'Hủy niêm yết sản phẩm của 1 V-shop'
      operationId: hyNimYtSnPhmCa1VShop
      description: 'API dùng để hủy niêm yết sản phẩm của V-shop'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: soluta
        required: true
        schema:
          type: string
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: itaque
        required: true
        schema:
          type: string
  /api/review-product/accept-review:
    post:
      summary: 'lưu đánh giá sản phẩm'
      operationId: lunhGiSnPhm
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Review
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: ID
                  description: product
                  example: voluptatem
                order_item_id:
                  type: ID
                  description: order_item
                  example: est
                customer_id:
                  type: ID
                  description: customer
                  example: repellendus
                descriptions:
                  type: ghi
                  description: chú
                  example: eos
                point_evaluation:
                  type: điểm
                  description: 'đánh giá'
                  example: illum
                images:
                  type: tối
                  description: "đa 3 ảnh\nAPI dùng để lưu đánh giá sản phẩm sau khi hoàn thành mua hàng"
                  example: minima
      security: []
  '/api/review-product/review-detail-product/{point_id}':
    get:
      summary: 'xem chi tiết đánh giá sản phẩm'
      operationId: xemChiTitnhGiSnPhm
      description: 'API dùng xem chi tiết đánh giá sản phẩm'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Review
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: ID
                  description: customer
                  example: cumque
      security: []
    parameters:
      -
        in: path
        name: point_id
        description: 'The ID of the point.'
        example: omnis
        required: true
        schema:
          type: string
  '/api/review-product/list-review-product/{product_id}':
    get:
      summary: 'xem danh sách đánh giá một sản phẩm'
      operationId: xemDanhSchnhGiMtSnPhm
      description: 'API dùng xem danh sách đánh giá sản phẩm'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Review
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: tổng
                  description: 'số review / 1 trang'
                  example: animi
                point_evaluation:
                  type: điểm
                  description: 'đánh giá'
                  example: sunt
      security: []
    parameters:
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: repudiandae
        required: true
        schema:
          type: string
  '/api/review-product/list-review-vdone/{done_id}':
    get:
      summary: 'xem danh sách đánh giá một sản phẩm trên Vdone'
      operationId: xemDanhSchnhGiMtSnPhmTrnVdone
      description: 'API dùng xem danh sách đánh giá sản phẩm trên Vdone'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Review
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: tổng
                  description: 'số review / 1 trang'
                  example: nulla
                status_rep:
                  type: trạng
                  description: 'thái trả lời của shop'
                  example: vitae
      security: []
    parameters:
      -
        in: path
        name: done_id
        description: 'The ID of the done.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/review-product/rep-review-product:
    post:
      summary: 'rep đánh giá của khách'
      operationId: repnhGiCaKhch
      description: 'API để shop rep đánh giá của khách'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Review
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                point_id:
                  type: ID
                  description: point
                  example: at
                descriptions:
                  type: nội
                  description: dung
                  example: ipsum
      security: []
  '/api/vshop/products/{pdone_id}':
    get:
      summary: ''
      operationId: getApiVshopProductsPdone_id
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vshop
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: 1
        required: true
        schema:
          type: integer
  /api/vshop:
    get:
      summary: 'Danh sách Vshop'
      operationId: danhSchVshop
      description: 'API dùng để lấy danh sách Vshop'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vshop
      security: []
    parameters:
      -
        in: path
        name: limit
        description: 'Optional parameter. giới hạn bản ghi mặc ịnh là 10'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: autem
      -
        in: path
        name: page
        description: 'Optional parameter. số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: incidunt
  /api/vshop/create:
    put:
      summary: 'Tạo Vshop'
      operationId: toVshop
      description: 'API để thêm 1 Vshop'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pdone_id:
                  type: id
                  description: 'của Vshop'
                  example: illo
                vshop_id:
                  type: string
                  description: ''
                  example: officiis
                nick_name:
                  type: string
                  description: ''
                  example: ut
                avatar:
                  type: url
                  description: 'ảnh đại diện'
                  example: sunt
              required:
                - vshop_id
                - nick_name
      security: []
  /api/vshop/get-discount:
    get:
      summary: 'Tỉ lệ chiết khấu mua nhiều giảm giá'
      operationId: tLChitKhuMuaNhiuGimGi
      description: 'API dùng để tính tỉ lệ chiết khấu cho nhập hàng sẵn'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vshop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: perferendis
                total:
                  type: number
                  description: ''
                  example: 32.44402024
              required:
                - id
                - total
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. id sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: voluptatibus
      -
        in: path
        name: total
        description: 'Optional parameter. số lượng'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: labore
  '/api/vshop/get-discount/{pdone_id}/{product_id}':
    get:
      summary: 'lấy mã giảm giá theo vshop và sản phẩm'
      operationId: lyMGimGiTheoVshopVSnPhm
      description: 'API này lấy chi tiết mã giảm giá theo pdone_id,product_id'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vshop
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: repellat
        required: true
        schema:
          type: string
  '/api/vshop/edit-discount/{pdone_id}/{product_id}':
    put:
      summary: 'thay dổi thông tin mã giảm giá theo vshop và saản phẩm'
      operationId: thayDiThngTinMGimGiTheoVshopVSanPhm
      description: 'API này lấy chi tiết mã giảm giá theo pdone_id,product_id'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: Ngày
                  description: 'bắt đầu required date_format:Y/m/d after:Today'
                  example: eligendi
                end_date:
                  type: Ngày
                  description: 'kết thúc required date_format:Y/m/d after:start_date'
                  example: est
                discount:
                  type: string
                  description: 'Must be at least 0 characters. Must not be greater than 100 characters.'
                  example: ipmdhillbbkfpyxvknwxm
              required:
                - discount
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: nemo
        required: true
        schema:
          type: string
      -
        in: path
        name: product_id
        description: 'The ID of the product.'
        example: pariatur
        required: true
        schema:
          type: string
      -
        in: path
        name: discount
        description: 'Optional parameter. Phần trăm giảm giá required min:0 max:discount_vShop'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 16
  /api/vshop/create-discount:
    post:
      summary: 'Lưu mới mã giảm giá'
      operationId: luMiMGimGi
      description: 'API này sẽ lưu mới mã giảm giá'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pdone_id:
                  type: Mã
                  description: 'p done required'
                  example: distinctio
                product_id:
                  type: Mã
                  description: 'sản phẩm required exits:products'
                  example: laudantium
                start_date:
                  type: Ngày
                  description: 'bắt đầu required date_format:Y/m/d after:Today'
                  example: alias
                end_date:
                  type: Ngày
                  description: 'kết thúc required date_format:Y/m/d after:start_date'
                  example: est
                discount:
                  type: string
                  description: 'Must be at least 0 characters. Must not be greater than 100 characters.'
                  example: ihrgvmtxoduxoyuu
              required:
                - discount
      security: []
    parameters:
      -
        in: path
        name: discount
        description: 'Optional parameter. Phần trăm giảm giá required min:0 max:discount_vShop'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 9
  '/api/vshop/profile/{pdone_id}':
    get:
      summary: 'Lấy thông tin cá nhân Vshop'
      operationId: lyThngTinCNhnVshop
      description: 'API này dùng để lấy thông tin cá nhân để dùng cho việc xem và chỉnh sửa'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vshop
      security: []
    put:
      summary: 'Cập nhập thông tin Vshop'
      operationId: cpNhpThngTinVshop
      description: 'API này dùng để cập nhập tin cá nhân'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                avatar:
                  type: Ảnh
                  description: 'đại diện'
                  example: aliquam
                vshop_name:
                  type: Tên
                  description: Vshop
                  example: assumenda
                description:
                  type: Mô
                  description: tả
                  example: 'Ut veritatis et qui modi quas quibusdam.'
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: vero
        required: true
        schema:
          type: string
  '/api/vshop/get-buy-more-discount/{id}':
    get:
      summary: 'danh sách chiết khấu cho hàng nhập sẵn'
      operationId: danhSchChitKhuChoHngNhpSn
      description: 'API dùng để tính tỉ lệ chiết khấu cho nhập hàng sẵn'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vshop
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. id sản phẩm'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: quidem
  /api/vshop/get_money_history:
    get:
      summary: 'Cập nhập thông tin Vshop'
      operationId: cpNhpThngTinVshop
      description: 'API này dùng để cập nhập tin cá nhân'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vshop
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. id vshop'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: voluptatem
      -
        in: path
        name: start_day
        description: 'Optional parameter. lọc ngày bắt đầu'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ipsa
      -
        in: path
        name: end_day
        description: 'Optional parameter. lọc ngày kết thúc'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: pariatur
      -
        in: path
        name: type
        description: 'Optional parameter. 1 rút 2 cộng thêm, 3 hoàn tiền'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: cumque
      -
        in: path
        name: status
        description: 'Optional parameter. 1 thành công, 2 thất bại, 3 đang xử lý'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: vitae
  '/api/vshop/address/store/{pdone_id}':
    post:
      summary: 'Thêm thông tin giao hàng Vshop'
      operationId: thmThngTinGiaoHngVshop
      description: 'API dùng thêm địa chỉ giao hàng của Vshop'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: Tên
                  description: 'người nhận'
                  example: neque
                address:
                  type: địa
                  description: 'chỉ chi tiết'
                  example: quasi
                phone_number:
                  type: Số
                  description: 'điện thoại'
                  example: ducimus
                district:
                  type: 'quận,huyện'
                  description: ''
                  example: aut
                province:
                  type: tỉnh
                  description: thành
                  example: necessitatibus
      security: []
    parameters:
      -
        in: path
        name: pdone_id
        description: 'The ID of the pdone.'
        example: soluta
        required: true
        schema:
          type: string
  '/api/vshop/address/edit-address/{id}':
    get:
      summary: 'thông tin địa chỉ giao hàng'
      operationId: thngTinaChGiaoHng
      description: 'API Lấy ra thông tin địa chỉ giao hàng Vshop'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vshop
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the edit address.'
        example: corrupti
        required: true
        schema:
          type: string
  '/api/vshop/address/update-address/{id}':
    put:
      summary: 'Sửa thông tin nhận hàng Vshop'
      operationId: saThngTinNhnHngVshop
      description: 'API này để sửa thông tin địa chỉ'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: tên
                  description: 'người nhận'
                  example: quia
                name_address:
                  type: string
                  description: ''
                  example: ipsum
                address:
                  type: Địa
                  description: 'chỉ cụ thể'
                  example: nostrum
                phone_number:
                  type: Số
                  description: 'điện thoại'
                  example: doloremque
                district:
                  type: Quận
                  description: huyện
                  example: voluptas
                province:
                  type: Tỉnh
                  description: thành
                  example: aut
                wards:
                  type: string
                  description: 'Must be at least 1 character.'
                  example: obpttodjnvzckfqwjplknursechfivopjkwhepuimgrirheczkshasourttpfjfacbcdefhueegev
              required:
                - name_address
                - wards
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the update address.'
        example: et
        required: true
        schema:
          type: string
  '/api/vshop/pre-order/product/{productId}':
    post:
      summary: ''
      operationId: postApiVshopPreOrderProductProductId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: aspernatur
                ncc_id:
                  type: string
                  description: ''
                  example: nisi
                is_pdone:
                  type: boolean
                  description: ''
                  example: true
                quantity:
                  type: number
                  description: ''
                  example: 8955385.1
                place_name:
                  type: string
                  description: ''
                  example: praesentium
                fullname:
                  type: string
                  description: ''
                  example: voluptas
                phone:
                  type: string
                  description: ''
                  example: debitis
                district_id:
                  type: string
                  description: ''
                  example: sed
                province_id:
                  type: string
                  description: ''
                  example: distinctio
                ward_id:
                  type: string
                  description: ''
                  example: distinctio
                address:
                  type: string
                  description: ''
                  example: ea
              required:
                - user_id
                - ncc_id
                - is_pdone
                - quantity
                - place_name
                - fullname
                - phone
                - district_id
                - province_id
                - ward_id
                - address
      security: []
    parameters:
      -
        in: path
        name: productId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/vshop/pre-order/{orderId}/confirm':
    post:
      summary: ''
      operationId: postApiVshopPreOrderOrderIdConfirm
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: quam
                is_pdone:
                  type: boolean
                  description: ''
                  example: false
              required:
                - user_id
                - is_pdone
      security: []
    parameters:
      -
        in: path
        name: orderId
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/vshop/pre-order/{orderId}/payment':
    post:
      summary: ''
      operationId: postApiVshopPreOrderOrderIdPayment
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: rem
                is_pdone:
                  type: boolean
                  description: ''
                  example: false
                method_payment:
                  type: string
                  description: 'Must be one of <code>ATM_CARD</code>, <code>CREDIT_CARD</code>, <code>9PAY</code>, <code>BANK_TRANSFER</code>, or <code>COD</code>.'
                  example: CREDIT_CARD
              required:
                - user_id
                - is_pdone
                - method_payment
      security: []
    parameters:
      -
        in: path
        name: orderId
        description: ''
        example: dolore
        required: true
        schema:
          type: string
  '/api/vshop/user/{userId}/pre-order':
    get:
      summary: ''
      operationId: getApiVshopUserUserIdPreOrder
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vshop
      security: []
    parameters:
      -
        in: path
        name: userId
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  '/api/vshop/pre-order/{orderId}':
    post:
      summary: ''
      operationId: postApiVshopPreOrderOrderId
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Vshop
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: in
                is_pdone:
                  type: boolean
                  description: ''
                  example: true
              required:
                - user_id
                - is_pdone
      security: []
    parameters:
      -
        in: path
        name: orderId
        description: ''
        example: necessitatibus
        required: true
        schema:
          type: string
  /api/vstore:
    get:
      summary: 'Danh sách nhà vstore'
      operationId: danhSchNhVstore
      description: 'API này sẽ trả về sách vstore'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vstore
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                branch:
                  type: number
                  description: 'Must be at least 1. Must not be greater than 2.'
                  example: 1
      security: []
    parameters:
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: beatae
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: consequatur
      -
        in: path
        name: branch
        description: 'Optional parameter. 1 là vstore thường, 2 là vstore cấp 1 (địa phương)'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: nam
      -
        in: path
        name: account_code
        description: 'Optional parameter. tìm kiếm mã vstore'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: qui
      -
        in: path
        name: name
        description: 'Optional parameter. tìm kiếm mã name'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: culpa
      -
        in: path
        name: company_name
        description: 'Optional parameter. tìm kiếm mã tên công ty'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: est
  /api/vstore/search:
    get:
      summary: 'Danh sách V-Store có tên chứa từ khóa tìm kiếm'
      operationId: danhSchVStoreCTnChaTKhaTmKim
      description: 'API này sẽ trả về danh sách vstore'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vstore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key_word:
                  type: string
                  description: ''
                  example: non
              required:
                - key_word
      security: []
    parameters:
      -
        in: path
        name: key_word
        description: 'Optional parameter. id user'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: in
  '/api/vstore/{id}':
    get:
      summary: 'chi tiết vstore'
      operationId: chiTitVstore
      description: 'API này sẽ trả về chi tiết vstore'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vstore
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vstore.'
        example: harum
        required: true
        schema:
          type: string
  '/api/vstore/category/{id}':
    get:
      summary: 'Danh sách vstore danh mục'
      operationId: danhSchVstoreDanhMc
      description: 'API này sẽ trả về sách vstore có sản phẩm trong danh mục'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 2
                  message: Unauthorized
                properties:
                  status:
                    type: integer
                    example: 2
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Vstore
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
      -
        in: path
        name: page
        description: 'Optional parameter. Số trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: aut
      -
        in: path
        name: limit
        description: 'Optional parameter. Giới hạn bản ghi trên một trang'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: deserunt
tags:
  -
    name: 'Big Sale'
    description: "\nDanh sách api liên quan tới sản phẩm được giảm giá"
  -
    name: Bill
    description: "\nDanh sách api liên quan hóa dơn"
  -
    name: Cart
    description: "\nDanh sách api liên quan tới giỏ hàng"
  -
    name: Categories
    description: "\nDanh sách api liên quan tới danh mục"
  -
    name: Discount
    description: "\nDanh sách api liên quan tới mã giảm giá"
  -
    name: Endpoints
    description: ''
  -
    name: Finance
    description: "\nDanh sách api liên quan tài chính V-Shop"
  -
    name: Manufacture
    description: "\nDanh sách api liên quan nhà cung cấp"
  -
    name: Oder
    description: "\nDanh sách api liên quan tới order bill"
  -
    name: Product
    description: "\nDanh sách api liên quan tới sản phẩm"
  -
    name: Review
    description: "\nDanh sách api liên quan tới đánh giá sản phẩm"
  -
    name: Vshop
    description: "\nDanh sách api liên quan V-shop"
  -
    name: Vstore
    description: "\nDanh sách api liên quan nhà phân phối vstore"
